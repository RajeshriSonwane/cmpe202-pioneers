
// -- user code here --

/* --- start generated code --- */

// Generated by Phaser Editor v1.4.2 (Phaser v2.6.2)


/**
 * Level.
 */
function Level() {
	
	Phaser.State.call(this);
	
}

/** @type Phaser.State */
var Level_proto = Object.create(Phaser.State.prototype);
Level.prototype = Level_proto;
Level.prototype.constructor = Level;

Level.prototype.init = function () {
	
	this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
	this.scale.pageAlignHorizontally = true;
	this.scale.pageAlignVertically = true;
	this.stage.backgroundColor = '#ffffff';
	
};

Level.prototype.preload = function () {
	
	this.load.pack('level', 'assets/pack.json');
	
};

Level.prototype.create = function () {
	var _prefab = this.add.group();
	
	this.add.sprite(-2, -40, 'background', null, _prefab);
	
	var _Physics = this.add.physicsGroup(Phaser.Physics.ARCADE, _prefab);
	
	var _physics = this.add.sprite(-86, 280, 'AtlasV1', 'physics', _Physics);
	_physics.name = 'aaj';
	_physics.scale.setTo(2.75, 1.0);
	
	var _idle = this.add.sprite(16, 205, 'idle', null, _prefab);
	this.game.physics.arcade.enable(_idle);
	_idle.body.setCircle(36.0);
	
	this.add.sprite(269, 178, 'AtlasV1', 'platform2', _prefab);
	
	this.add.sprite(395, 184, 'AtlasV1', 'brick1', _prefab);
	
	var _Base = this.add.sprite(1, 299, 'AtlasV1', 'Base1', _prefab);
	_Base.scale.setTo(3.0, 1.0);
	
	
	
	// public fields
	
	this.fPhysics = _Physics;
	this.fIdle = _idle;
	
};

/* --- end generated code --- */
// -- user code here --
