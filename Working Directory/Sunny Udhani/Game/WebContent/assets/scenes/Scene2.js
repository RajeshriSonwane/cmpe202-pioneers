
// -- user code here --

/* --- start generated code --- */

// Generated by Phaser Editor 1.4.3 (Phaser v2.6.2)


/**
 * Scene2.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function Scene2(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	this.game.add.tileSprite(2, 1, 1920, 1080, 'back4', null, this);
	
	var _collisionLayer = this.game.add.physicsGroup(Phaser.Physics.ARCADE, this);
	
	var _physics = this.game.add.sprite(-6, 1079, 'AtlasV1', 'physics', _collisionLayer);
	_physics.scale.setTo(4.456137192544979, 0.7764196437227103);
	
	var _physics1 = this.game.add.sprite(-3, 237, 'AtlasV1', 'physics', _collisionLayer);
	_physics1.scale.setTo(0.49281008152683464, 1.670732781544981);
	
	var _physics4 = this.game.add.sprite(601, 441, 'AtlasV1', 'physics', _collisionLayer);
	_physics4.scale.setTo(0.18849615237233974, 1.2235761546826331);
	
	var _physics2 = this.game.add.sprite(473, 128, 'AtlasV1', 'physics', _collisionLayer);
	_physics2.scale.setTo(0.3116707412770432, 1.6707328013190235);
	
	var _physics6 = this.game.add.sprite(1089, 165, 'AtlasV1', 'physics', _collisionLayer);
	_physics6.scale.setTo(0.19574182915200364, 1.670732781544981);
	
	var _physics7 = this.game.add.sprite(10, 750, 'AtlasV1', 'physics', _collisionLayer);
	_physics7.scale.setTo(0.49281008152683464, 1.670732781544981);
	
	var _physics5 = this.game.add.sprite(829, 300, 'AtlasV1', 'physics', _collisionLayer);
	_physics5.scale.setTo(0.18849626112474305, 1.670732781544981);
	
	var _physics8 = this.game.add.sprite(701, 813, 'AtlasV1', 'physics', _collisionLayer);
	_physics8.scale.setTo(0.49281008152683464, 1.670732781544981);
	
	var _physics10 = this.game.add.sprite(1566, 753, 'AtlasV1', 'physics', _collisionLayer);
	_physics10.scale.setTo(0.8188607794941662, 1.670732781544981);
	
	var _physics9 = this.game.add.sprite(1157, 973, 'AtlasV1', 'physics', _collisionLayer);
	_physics9.scale.setTo(0.5870026029879345, 1.670732781544981);
	
	var _physics11 = this.game.add.sprite(12, 236, 'AtlasV1', 'physics', _collisionLayer);
	_physics11.scale.setTo(0.49281008152683464, 1.670732781544981);
	
	var _physics3 = this.game.add.sprite(326, 584, 'AtlasV1', 'physics', _collisionLayer);
	_physics3.scale.setTo(0.2537062516280532, 1.6707327815690296);
	
	var _Enemy = this.game.add.physicsGroup(Phaser.Physics.ARCADE, this);
	_Enemy.renderable = false;
	
	var _enemy = this.game.add.sprite(22, 645, 'enemy1', 0, _Enemy);
	_enemy.scale.setTo(0.32488351978865954, 0.2508318903325017);
	
	var _enemy1 = this.game.add.sprite(790, 389, 'enemy2', null, _Enemy);
	_enemy1.scale.setTo(0.41591689614081323, 0.27488343072142035);
	
	var _enemy3 = this.game.add.sprite(835, 698, 'enemy1', 1, _Enemy);
	_enemy3.scale.setTo(0.34534128162048316, 0.3124073528366544);
	
	var _enemy2 = this.game.add.sprite(1778, 623, 'enemy1', 1, _Enemy);
	_enemy2.scale.setTo(0.34534128162048316, 0.3124073528366544);
	
	var _player = this.game.add.sprite(89, 111, 'player', 0, this);
	_player.anchor.setTo(0.5, 0.0);
	_player.animations.add('walk', [0, 1], 4, false);
	_player.animations.add('jump', [3], 3, false);
	_player.animations.add('idle', [0], 60, false);
	_player.animations.add('attack', [4, 0], 4, false);
	this.game.physics.arcade.enable(_player);
	
	var _collectibles = this.game.add.physicsGroup(Phaser.Physics.ARCADE, this);
	
	var _pumpkin = this.game.add.sprite(623, 287, 'pumpkin', null, _collectibles);
	_pumpkin.scale.setTo(0.25, 0.25);
	
	var _pumpkin1 = this.game.add.sprite(790, 682, 'pumpkin', null, _collectibles);
	_pumpkin1.scale.setTo(0.25, 0.25);
	
	var _pumpkin2 = this.game.add.sprite(847, 189, 'pumpkin', null, _collectibles);
	_pumpkin2.scale.setTo(0.25, 0.25);
	
	var _pumpkin3 = this.game.add.sprite(506, 28, 'pumpkin', null, _collectibles);
	_pumpkin3.scale.setTo(0.25, 0.25);
	
	var _pumpkin4 = this.game.add.sprite(141, 664, 'pumpkin', null, _collectibles);
	_pumpkin4.scale.setTo(0.25, 0.25);
	
	var _pumpkin5 = this.game.add.sprite(352, 495, 'pumpkin', null, _collectibles);
	_pumpkin5.scale.setTo(0.25, 0.25);
	
	var _pumpkin6 = this.game.add.sprite(1239, 842, 'pumpkin', null, _collectibles);
	_pumpkin6.scale.setTo(0.25, 0.25);
	
	var _pumpkin7 = this.game.add.sprite(1859, 524, 'pumpkin', null, _collectibles);
	_pumpkin7.scale.setTo(0.25, 0.25);
	
	var _pumpkin8 = this.game.add.sprite(1112, 30, 'pumpkin', null, _collectibles);
	_pumpkin8.scale.setTo(0.25, 0.25);
	
	var _pumpkin9 = this.game.add.sprite(25, 897, 'pumpkin', null, _collectibles);
	_pumpkin9.scale.setTo(0.25, 0.25);
	
	var _Platform = this.game.add.group(this);
	
	var _platform = this.game.add.sprite(1, 233, 'AtlasV1', 'platform2', _Platform);
	_platform.scale.setTo(0.6778573338745293, 0.40679545832357716);
	
	var _platform1 = this.game.add.sprite(473, 126, 'AtlasV1', 'platform3', _Platform);
	_platform1.scale.setTo(0.2605838660206705, 0.42728032672455085);
	
	var _platform2 = this.game.add.sprite(1563, 741, 'AtlasV1', 'platform6', _Platform);
	_platform2.scale.setTo(0.4180733391451292, 0.4251174962632454);
	
	var _platform3 = this.game.add.sprite(1161, 953, 'AtlasV1', 'platform5', _Platform);
	_platform3.scale.setTo(0.7238157856272961, 0.6963346152326263);
	
	var _platform4 = this.game.add.sprite(700, 798, 'AtlasV1', 'platform4', _Platform);
	_platform4.scale.setTo(0.6956858152571566, 0.5870022344036645);
	
	this.game.add.sprite(798, 250, 'AtlasV1', 'platform1', _Platform);
	
	this.game.add.sprite(310, 535, 'AtlasV1', 'platform1', _Platform);
	
	this.game.add.sprite(1061, 115, 'AtlasV1', 'platform1', _Platform);
	
	this.game.add.sprite(579, 385, 'AtlasV1', 'platform1', _Platform);
	
	var _base = this.game.add.sprite(-3, 1075, 'AtlasV1', 'base1', _Platform);
	_base.scale.setTo(4.777959578800121, 1.0);
	
	var _platform9 = this.game.add.sprite(-4, 744, 'AtlasV1', 'platform5', _Platform);
	_platform9.scale.setTo(0.7238157856272961, 0.6963346152326263);
	
	var _pumpkinscore = this.game.add.sprite(15, 10, 'pumpkin', null, this);
	_pumpkinscore.scale.setTo(0.2, 0.2);
	_pumpkinscore.fixedToCamera = true;
	
	
	
	// public fields
	
	this.fCollisionLayer = _collisionLayer;
	this.fEnemy = _Enemy;
	this.fPlayer = _player;
	this.fCollectibles = _collectibles;
	this.fPumpkinscore = _pumpkinscore;
	
}

/** @type Phaser.Group */
var Scene2_proto = Object.create(Phaser.Group.prototype);
Scene2.prototype = Scene2_proto;
Scene2.prototype.constructor = Scene2;

/* --- end generated code --- */
// -- user code here --
